[
  {
    "cmd": "begin",
    "description": "Guide to Getting Started",
    "custom": true,
    "customScript": "begin",
    "options": [ ]
  },
  {
    "cmd": "login",
    "description": "",
    "requiresToken": false,
    "custom": true,
    "customScript": "login",
    "options": [ ]
  },
  {
    "cmd": "which-user",
    "description": "outputs the email of logged in user",
    "requiresToken": false,
    "custom": true,
    "customScript": "whichUser",
    "options": [ ]
  },
  {
    "cmd": "which-bucket",
    "description": "outputs the bucket-slug",
    "requiresToken": false,
    "custom": true,
    "customScript": "whichBucket",
    "options": [ ]
  },
  {
    "cmd": "use-bucket",
    "description": "",
    "requiresToken": false,
    "custom": true,
    "customScript": "useBucket",
    "options": [
      {
        "param": "slug",
        "flags": "-s, --slug [value]",
        "description": "bucket slug"
      },
      {
        "param": "read_key",
        "flags": "-k, --read_key [value]",
        "description": "read key"
      },
      {
        "param": "write_key",
        "flags": "-w, --write_key [value]",
        "description": "write key"
      }
    ]
  },
  {
    "cmd": "add-bucket",
    "description": "",
    "requiresToken": true,
    "cosmicMethod": {
      "useBucket": false,
      "method": "addBucket"
    },
    "options": [
      {
        "param": "slug",
        "flags": "-s, --slug [value]",
        "description": "bucket slug"
      },
      {
        "param": "title",
        "flags": "-t, --title [value]",
        "description": "bucket title"
      }
    ]
  },
  {
    "cmd": "get-objects",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "getObjects"
    },
    "options": [
      {
        "param": "limit",
        "flags": "-l, --limit [value]",
        "description": "[optional] limit on number of objects to return"
      },
      {
        "param": "skip",
        "flags": "-s, --skip [value]",
        "description": "[optional] # objects to skip"
      },
      {
        "param": "locale",
        "flags": "--locale [value]",
        "description": "[optional] specify locale filter"
      },
      {
        "param": "status",
        "flags": "--status [value]",
        "description": "[optional] specify locale filter"
      }
    ]
  },
  {
    "cmd": "get-object",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "getObject"
    },
    "options": [
      {
        "param": "slug",
        "flags": "-s, --slug [value]",
        "description": "bucket slug"
      },
      {
        "param": "locale",
        "flags": "--locale [value]",
        "description": "[optional] specify locale filter"
      },
      {
        "param": "status",
        "flags": "--status [value]",
        "description": "[optional] specify locale filter"
      }
    ]
  },
  {
    "cmd": "get-object-types",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "getObjectTypes"
    },
    "options": [
      {
        "param": "limit",
        "flags": "-l, --limit [value]",
        "description": "[optional] limit on number of objects to return"
      },
      {
        "param": "skip",
        "flags": "-s, --skip [value]",
        "description": "[optional] # objects to skip"
      },
      {
        "param": "locale",
        "flags": "--locale [value]",
        "description": "[optional] specify locale filter"
      },
      {
        "param": "status",
        "flags": "--status [value]",
        "description": "[optional] specify locale filter"
      }
    ]
  },
  {
    "cmd": "add-object-type",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "addObjectType"
    },
    "options": [
      {
        "param": "slug",
        "flags": "-s, --slug [value]",
        "description": "bucket slug"
      },
      {
        "param": "title",
        "flags": "-t, --title [value]",
        "description": "plural title of your object type"
      },
      {
        "param": "singular",
        "flags": "--singular [value]",
        "description": "singular title of your object type"
      },
      {
        "param": "metafields",
        "flags": "-m, --metafields [value]",
        "description": "Default Metafields for each Object in this type",
        "isJsonString": true
      },
      {
        "param": "json",
        "flags": "-j, --json [value]",
        "description": "Json string with specifications for the new object type. Ex: '[{\"slug\":\"my-slug\", \"title\": \"My awesome title\", \"metafields\": {...}}]'",
        "isJsonString": true,
        "isWrapperParameter": true
      }
    ]
  },
  {
    "cmd": "edit-object-type",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "editObjectType"
    },
    "options": [
      {
        "param": "slug",
        "flags": "-s, --slug [value]",
        "description": "object slug"
      },
      {
        "param": "title",
        "flags": "-t, --title [value]",
        "description": "your object title"
      },
      {
        "param": "singular",
        "flags": "--singular [value]",
        "description": "singular title of your object type"
      },
      {
        "param": "metafields",
        "flags": "-m, --metafields [value]",
        "description": "Default Metafields for each Object in this type",
        "isJsonString": true
      },
      {
        "param": "json",
        "flags": "-j, --json [value]",
        "description": "Json string with specifications for the edits to the object type. Ex: '[{\"slug\":\"my-slug\", \"metafields\": {...}}]'",
        "isJsonString": true,
        "isWrapperParameter": true
      }
    ]
  },
  {
    "cmd": "delete-object-type",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "deleteObjectType"
    },
    "options": [
      {
        "param": "slug",
        "flags": "-s, --slug [value]",
        "description": "object slug to delete"
      }
    ]
  },
  {
    "cmd": "add-object",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "addObject"
    },
    "options": [
      {
        "param": "type_slug",
        "flags": "-o, --type_slug [value]",
        "description": "add object to object type"
      },
      {
        "param": "title",
        "flags": "-t, --title [value]",
        "description": "your object title"
      },
      {
        "param": "slug",
        "flags": "-s, --slug [value]",
        "description": "object slug"
      },
      {
        "param": "content",
        "flags": "-c, --content [value]",
        "description": "add content to your object"
      },
      {
        "param": "status",
        "flags": "--status [value]",
        "description": "draft, published, defaults to published"
      },
      {
        "param": "locale",
        "flags": "--locale [value]",
        "description": "add localization to the object"
      },
      {
        "param": "metafields",
        "flags": "-m, --metafields [value]",
        "description": "Default Metafields for each Object in this type",
        "isJsonString": true
      },
      {
        "param": "json",
        "flags": "-j, --json [value]",
        "description": "Json string with specifications for the new object. Ex: '[{\"type_slug\":\"my-obj-type\", \"slug\":\"my-slug\", \"title\": \"My new obj\"}]'",
        "isJsonString": true,
        "isWrapperParameter": true
      }
    ]
  },
  {
    "cmd": "edit-object",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "editObject"
    },
    "options": [
      {
        "param": "slug",
        "flags": "-s, --slug [value]",
        "description": "object slug"
      },
      {
        "param": "type_slug",
        "flags": "-o, --type_slug [value]",
        "description": "add object to object type"
      },
      {
        "param": "title",
        "flags": "-t, --title [value]",
        "description": "your object title"
      },
      {
        "param": "content",
        "flags": "-c, --content [value]",
        "description": "add content to your object"
      },
      {
        "param": "status",
        "flags": "--status [value]",
        "description": "draft, published, defaults to published"
      },
      {
        "param": "locale",
        "flags": "--locale [value]",
        "description": "add localization to the object"
      },
      {
        "param": "metafields",
        "flags": "-m, --metafields [value]",
        "description": "Default Metafields for each Object in this type",
        "isJsonString": true
      },
      {
        "param": "json",
        "flags": "-j, --json [value]",
        "description": "Json string with specifications for the object edits. Ex: '[{\"slug\":\"my-slug\", \"title\": \"Altered Title\"}]'",
        "isJsonString": true,
        "isWrapperParameter": true
      }
    ]
  },
  {
    "cmd": "delete-object",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "deleteObject"
    },
    "options": [
      {
        "param": "slug",
        "flags": "-s, --slug [value]",
        "description": "object slug to delete"
      }
    ]
  },
  {
    "cmd": "add-media",
    "description": "",
    "requiresToken": false,
    "custom": true,
    "customScript": "addMedia",
    "options": [
      {
        "param": "file",
        "flags": "-f, --file [value]",
        "description": "path to file of media"
      },
      {
        "param": "title",
        "flags": "-t, --title [value]",
        "description": "title to save media file under"
      },
      {
        "param": "folder",
        "flags": "--folder [value]",
        "description": "media folder slug"
      }
    ]
  },
  {
    "cmd": "get-media",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "getMedia"
    },
    "options": [
      {
        "param": "limit",
        "flags": "-l, --limit [value]",
        "description": "[optional] limit on number of media objects to return"
      },
      {
        "param": "skip",
        "flags": "-s, --skip [value]",
        "description": "[optional] # media objects to skip"
      },
      {
        "param": "locale",
        "flags": "--locale [value]",
        "description": "[optional] specify locale filter"
      },
      {
        "param": "status",
        "flags": "--status [value]",
        "description": "[optional] specify locale filter"
      }
    ]
  },
  {
    "cmd": "delete-media",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "deleteMedia"
    },
    "options": [
      {
        "param": "id",
        "flags": "--id [value]",
        "description": "id of media to delete"
      }
    ]
  },
  {
    "cmd": "add-webhook",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "addWebhook"
    },
    "options": [
      {
        "param": "event",
        "flags": "--event [value]",
        "description": "enum: [object.created.draft, object.created.published, object.edited.draft, object.edited.published, object.deleted, media.created, media.edited, media.deleted]"
      },
      {
        "param": "endpoint",
        "flags": "--endpoint [value]",
        "description": "The endpoint that will receive the data"
      }
    ]
  },
  {
    "cmd": "delete-webhook",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "deleteWebhook"
    },
    "options": [
      {
        "param": "id",
        "flags": "--id [value]",
        "description": "id of webhook to delete"
      }
    ]
  },
  {
    "cmd": "add-user",
    "description": "",
    "requiresToken": false,
    "cosmicMethod": {
      "useBucket": true,
      "method": "addUser"
    },
    "options": [
      {
        "param": "email",
        "flags": "-e , --email [value]",
        "description": "The new user's email"
      },
      {
        "param": "role",
        "flags": "-r, --role [value]",
        "description": "admin, developer, editor or contributor"
      },
      {
        "param": "first_name",
        "flags": "--first_name [value]",
        "description": "The new user's first name"
      },
      {
        "param": "last_name",
        "flags": "--last_name [value]",
        "description": "The new user's last name"
      }
    ]
  }
]
